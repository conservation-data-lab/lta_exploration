[
  {
    "objectID": "wrangle_zs_outputs.html",
    "href": "wrangle_zs_outputs.html",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "",
    "text": "For many of the analyses, the Zonal Histogram tool in QGIS was used."
  },
  {
    "objectID": "wrangle_zs_outputs.html#gis-work",
    "href": "wrangle_zs_outputs.html#gis-work",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "",
    "text": "For many of the analyses, the Zonal Histogram tool in QGIS was used."
  },
  {
    "objectID": "wrangle_zs_outputs.html#set-up",
    "href": "wrangle_zs_outputs.html#set-up",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "Set up",
    "text": "Set up\nBelow we will load in libraries (installing if needed) and read in input datasets.\n\n# Install and load packages ----\n\n# install.packages(\"RColorBrewer\")\n# install.packages(\"scales\")\n# install.packages(\"sf\")\n# install.packages(\"tidyverse\")\n\nlibrary(RColorBrewer)\nlibrary(scales)\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ dplyr::lag()        masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read in input (raw) data ----\n# zonal stats output from QGIS, BpSs per LTA for Ouachita NF\nonf_ltas_bps &lt;- st_read(\"inputs/onf_ltas_bps.gpkg\", quiet = TRUE)\n\n# zonal stats output from QGIS, BpSs per HUC 12 Watershed for the Flathead NF\nflathead_huc12_bps &lt;- st_read(\"inputs/flathead_huc12s_bps.gpkg\")\n\nReading layer `flathead_huc12s_bps' from data source \n  `C:\\Users\\rswaty\\Documents\\lta_exploration\\inputs\\flathead_huc12s_bps.gpkg' \n  using driver `GPKG'\nSimple feature collection with 221 features and 86 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -1421143 ymin: 2796563 xmax: -1252153 ymax: 3031697\nProjected CRS: NAD83 / Conus Albers\n\n# zonal stats output from QGIS, BpSs per ~40k acre hexagons for the Flathead NF\nflathead_hexs_bps &lt;- st_read(\"inputs/flathead_hexs_bps.gpkg\")\n\nReading layer `output_zones' from data source \n  `C:\\Users\\rswaty\\Documents\\lta_exploration\\inputs\\flathead_hexs_bps.gpkg' \n  using driver `GPKG'\nSimple feature collection with 108 features and 70 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -1421143 ymin: 2800697 xmax: -1259485 ymax: 3031697\nProjected CRS: NAD83 / Conus Albers\n\n# Read in additional data (e.g. attributes) ----\n\nbps_attributes &lt;- read_csv('inputs/LF20_BPS_220.csv') |&gt;\n  # remove unwanted columns by location-easier than spelling them out by name, but assumes they don't move!  Check output to make sure.\n  select(-c(2,3, 11:20))\n\nRows: 2189 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): BPS_MODEL, BPS_NAME, GROUPVEG, FRG_NEW\ndbl (16): VALUE, BPS_CODE, ZONE, FRI_REPLAC, FRI_MIXED, FRI_SURFAC, FRI_ALLF...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-lta-data-for-the-ouachita-national-forest",
    "href": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-lta-data-for-the-ouachita-national-forest",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "Initial exploration and wrangling of BpS-LTA data for the Ouachita National Forest",
    "text": "Initial exploration and wrangling of BpS-LTA data for the Ouachita National Forest\n\n# quick plot for fun\nplot(onf_ltas_bps[\"UID\"], key.pos = NULL)\n\n\n\n\n\n\n\n# Make dataframe of column names for exploration ----\n\n# get list\ncolumn_names &lt;- colnames(onf_ltas_bps)\n\n# make dataframe-easier to look at\ncolumn_names_df &lt;- data.frame(Column_Names = column_names)\n\n# whoa 171 columns!  We only need the ones that indicate the LTA and BPS, plus the geometry.  Luckily we can do this easily!\n\n# Clean and pivot data\nclean_onf_ltas_bps &lt;- onf_ltas_bps |&gt;\n  # keep the UID, geom and columns that start with \"BPS_\"\n  select(UID, geom, starts_with(\"BPS_\"))\n\n# looks good, but is wide!\n\nclean_onf_ltas_bps_long &lt;- clean_onf_ltas_bps |&gt;\n  # Pivot columns starting with \"BPS_\" into long format\n  pivot_longer(cols = starts_with(\"BPS_\"), names_to = \"bps_value\", values_to = \"count\") |&gt;\n  # Remove the \"BPS_\" prefix from the bps_value column\n  mutate(bps_value = as.numeric(str_remove(bps_value, \"^BPS_\"))) |&gt;\n  # Reorder columns to have UID, count, bps_value, and geom\n  select(UID, count, bps_value, geom)\n\n# yay!  One more thing, we want BPS names and other information\n\n# Join in BpS attributes\n\nfinal_onf_lta_bps &lt;- clean_onf_ltas_bps_long |&gt;\n  # join in attributes, noting that the datasets have different names for the joining columns\n  left_join(bps_attributes, by = c(\"bps_value\" = \"VALUE\")) |&gt;\n  # move the geom column to the far right, makes it all easier to read\n  relocate(geom, .after = last_col())\n\n\nMake a map of the majority BpS per LTA for fun\n\n# Convert the data to an sf object using the 'geom' field\ndata_sf &lt;- st_as_sf(final_onf_lta_bps, wkt = \"geom\")\n\n\n# Aggregate the data to find the majority BPS_NAME by count per UID\nmajority_bps &lt;- data_sf %&gt;%\n  group_by(UID) %&gt;%\n  summarize(BPS_NAME_majority = BPS_NAME[which.max(count)])\n\n# Drop geometry from the aggregated data\nmajority_bps &lt;- st_drop_geometry(majority_bps)\n\n# Merge the aggregated data with the original spatial data using left_join\nmerged_data &lt;- data_sf %&gt;%\n  left_join(majority_bps, by = \"UID\")\n\n# Select only the necessary columns to avoid duplication\nmerged_data &lt;- merged_data %&gt;%\n  select(UID, BPS_NAME_majority, geom)\n\n\n\n# Define a color palette\nbps_names &lt;- unique(merged_data$BPS_NAME_majority)\ncolors &lt;- brewer.pal(length(bps_names) - 1, \"Set3\")\ncolors &lt;- c(\"Open Water\" = \"blue\", setNames(colors, bps_names[bps_names != \"Open Water\"]))\n\n# Plot the map with polygons colored by the majority BPS_NAME\nbps_map &lt;- \n\n# Plot the map with polygons colored by the majority BPS_NAME\nggplot(data = merged_data) +\n  geom_sf(aes(fill = BPS_NAME_majority)) +\n  scale_fill_manual(values = colors) +\n  theme(panel.background = element_rect(fill = \"white\"),\n     panel.border = element_rect(fill = NA)) +\n  labs(title = \"Majority BPS_NAME by UID Polygon\",\n    fill = \"BPS_NAME\") +\n  theme(\n    legend.position = \"bottom\", # Move legend to the bottom\n    legend.title = element_blank(), # Adjust legend title size\n    legend.text = element_text(size = 8), # Adjust legend text size\n    legend.key.size = unit(0.5, \"cm\"), # Adjust legend key size\n    plot.title = element_text(size = 14, face = \"bold\"), # Adjust title size\n    #plot.margin = margin(10, 10, 10, 10), # Adjust plot margins\n    legend.box = \"horizontal\" # Arrange legend items horizontally\n  ) +\n  guides(fill = guide_legend(ncol = 3)) # Arrange legend items in three columns\n\n\n\n\n\nbps_map"
  },
  {
    "objectID": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-huc-12-watershed-data-for-the-flathead-national-forest",
    "href": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-huc-12-watershed-data-for-the-flathead-national-forest",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "Initial exploration and wrangling of BpS-HUC 12 Watershed data for the Flathead National Forest",
    "text": "Initial exploration and wrangling of BpS-HUC 12 Watershed data for the Flathead National Forest\nHUC (Hydrological Unit) 12 data obtained from https://apps.nationalmap.gov/downloader/#/, specifically by selecting Boundaries -&gt; Hydrography (3D Hydrography Program Products and Services) -&gt; Watershed Boundary Dataset (WBD) after drawing a polygon of the area of interest.\nThese watershed boundaries are ~ 10k - 40K acres which roughly matches the LTAs which range from ~2k - 120k acres with a mean of ~10k acres for the Flathead NF.\n\nplot(flathead_huc12_bps[\"areaacres\"], key.pos = NULL)\n\n\n\n\n\n\n\n# get list\ncolumn_names &lt;- colnames(flathead_huc12_bps)\n\n# make dataframe-easier to look at\ncolumn_names_df &lt;- data.frame(Column_Names = column_names)\n\n# Clean and pivot data\nclean_flathead_huc12_bps &lt;- flathead_huc12_bps |&gt;\n  # keep the UID, geom and columns that start with \"BPS_\"\n  select(huc12, name, geom, starts_with(\"BPS_\"))\n\n\n# looks good, but is wide!\n\nclean_flathead_huc12_bps_long &lt;- clean_flathead_huc12_bps |&gt;\n  # Pivot columns starting with \"BPS_\" into long format\n  pivot_longer(cols = starts_with(\"BPS_\"), names_to = \"bps_value\", values_to = \"count\") |&gt;\n  # Remove the \"BPS_\" prefix from the bps_value column\n  mutate(bps_value = as.numeric(str_remove(bps_value, \"^BPS_\"))) |&gt;\n  # Reorder columns to have UID, count, bps_value, and geom\n  select(huc12, name, count, bps_value, geom)\n\n# yay!  One more thing, we want BPS names and other information\n\n# Join in BpS attributes, drop geometry to write to .csv\n\nfinal_flathead_huc12_bps &lt;- clean_flathead_huc12_bps_long |&gt;\n  # drop geometry for now\n  st_drop_geometry() |&gt;\n  # join in attributes, noting that the datasets have different names for the joining columns\n  left_join(bps_attributes, by = c(\"bps_value\" = \"VALUE\")) \n\n\nwrite.csv(final_flathead_huc12_bps, file = \"outputs/flathead_huc12_bps.csv\")\n\n\nMake a chart of the BpSs within the watersheds for fun\nFirst clean up the data and add an acres field\n\nbps_hexs &lt;- final_flathead_huc12_bps |&gt;\n  st_drop_geometry()|&gt;\n  group_by(BPS_NAME) |&gt;\n  summarize(bps_acres = (sum(count*0.222))) |&gt;\n  filter(!BPS_NAME %in% c(\n    \"Barren-Rock/Sand/Clay\" ,\n    \"Open Water\",\n    \"Perennial Ice/Snow\")) |&gt;\n  arrange(desc(bps_acres)) |&gt;\n  slice_max(bps_acres, n = 10)\n\nThen make the chart of acres per BpS summarized for all watersheds that intersect/overlay the Flathead National Forest.\n\n# plot\nbps_chart &lt;- \n  ggplot(data = bps_hexs, aes(x = BPS_NAME, y = bps_acres)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Top 10 Biophysical Settings\",\n    subtitle = \"\",\n    caption = \"Data from landfire.gov.\",\n    x = \"\",\n    y = \"Acres\") +\n  scale_x_discrete(limits = rev(bps_hexs$BPS_NAME),\n                   labels = function(x) str_wrap(x, width = 18)) +\n  coord_flip() +\n  theme_bw(base_size = 14) +\n  scale_y_continuous(labels = scales::comma_format())\n\n\nbps_chart"
  },
  {
    "objectID": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-hexagon-data",
    "href": "wrangle_zs_outputs.html#initial-exploration-and-wrangling-of-bps-hexagon-data",
    "title": "Explore and Clean Zonal Stats Output",
    "section": "Initial exploration and wrangling of BpS-Hexagon data",
    "text": "Initial exploration and wrangling of BpS-Hexagon data\nThe hexagons I made had a horizontal and vertical spacing of 14,000M which made them ~ 40k acres.\n\n# quick map for fun\nplot(flathead_hexs_bps[\"id\"], key.pos = NULL)\n\n\n\n\n\n\n\n# Clean and pivot data\nclean_flathead_hexs_bps &lt;- flathead_hexs_bps |&gt;\n  # keep the UID, geom and columns that start with \"BPS_\"\n  select(id, geom, starts_with(\"BPS_\"))\n\n\n# looks good, but is wide!\n\nclean_flathead_hexs_bps_long &lt;- clean_flathead_hexs_bps |&gt;\n  # Pivot columns starting with \"BPS_\" into long format\n  pivot_longer(cols = starts_with(\"BPS_\"), names_to = \"bps_value\", values_to = \"count\") |&gt;\n  # Remove the \"BPS_\" prefix from the bps_value column\n  mutate(bps_value = as.numeric(str_remove(bps_value, \"^BPS_\"))) |&gt;\n  # Reorder columns to have UID, count, bps_value, and geom\n  select(id, count, bps_value, geom)\n\n# yay!  One more thing, we want BPS names and other information\n\n# Join in BpS attributes\n\nfinal_flathead_hexs_bps &lt;- clean_flathead_hexs_bps_long |&gt;\n  # drop geometry field to reduce size for saving as .csv\n  st_drop_geometry() |&gt;\n  # join in attributes, noting that the datasets have different names for the joining columns\n  left_join(bps_attributes, by = c(\"bps_value\" = \"VALUE\"))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring Ecosystem Variability Across Different Stratifications",
    "section": "",
    "text": "Land managers and researchers rely on polygons to-among other things-stratify the landscape for assessment and summarization of key attributes. Some examples include:\n\n\n\nProvisional LTA map\n\n\n\nWatershed boundaries (area of land that drains all the streams and rainfall to a common outlet) are used by hydrologists to help understand and manage waterflows and model potential pollution impacts. Land managers in general often use watersheds boundaries for cumulative impact assessments and to summarize land use.\nHexagons are often (e.g. than rectangles) used in research and cartography as they are less prone to distortion, nearest neighbor mapping is simplified as the centeroid of all six surrounding cells has the same distance and they can be less likely to highlight linear features.\n\nEcoregions are geographic areas defined by similar flora, fauna and/or ecosystems. They often have characteristic soils, climate and landforms. They are typically large (&gt;10k sqm), but can vary and size\n\nThe USFS has invested heavily in development of a hierarchical Ecological Classification System (ECS) that has units defined by biotic and environmental factors, and units ranging in size from Land Type Phases (10-100s of acres) to Domains (up to millions of square miles). Mapping of the larger polygons has been completed nationally, but mapping of the smaller units is underway.\nThe Terrestrial Ecological Unit Inventory is the USFS approach for mapping the smaller units of the ecological hierarchy in a standardized way. The first incomplete level of the hierarchy is the Land Type Associations (LTAs), and a recent USFS effort has mapped just over 62k LTA boundaries as of June 2025. LTA mapping has been driven by the latest ecological knowledge and eCognition software. The completion of these LTA boundaries comes with opportunities to assess their robustness and utility."
  },
  {
    "objectID": "index.html#challenge-and-opportunity",
    "href": "index.html#challenge-and-opportunity",
    "title": "Exploring Ecosystem Variability Across Different Stratifications",
    "section": "",
    "text": "Land managers and researchers rely on polygons to-among other things-stratify the landscape for assessment and summarization of key attributes. Some examples include:\n\n\n\nProvisional LTA map\n\n\n\nWatershed boundaries (area of land that drains all the streams and rainfall to a common outlet) are used by hydrologists to help understand and manage waterflows and model potential pollution impacts. Land managers in general often use watersheds boundaries for cumulative impact assessments and to summarize land use.\nHexagons are often (e.g. than rectangles) used in research and cartography as they are less prone to distortion, nearest neighbor mapping is simplified as the centeroid of all six surrounding cells has the same distance and they can be less likely to highlight linear features.\n\nEcoregions are geographic areas defined by similar flora, fauna and/or ecosystems. They often have characteristic soils, climate and landforms. They are typically large (&gt;10k sqm), but can vary and size\n\nThe USFS has invested heavily in development of a hierarchical Ecological Classification System (ECS) that has units defined by biotic and environmental factors, and units ranging in size from Land Type Phases (10-100s of acres) to Domains (up to millions of square miles). Mapping of the larger polygons has been completed nationally, but mapping of the smaller units is underway.\nThe Terrestrial Ecological Unit Inventory is the USFS approach for mapping the smaller units of the ecological hierarchy in a standardized way. The first incomplete level of the hierarchy is the Land Type Associations (LTAs), and a recent USFS effort has mapped just over 62k LTA boundaries as of June 2025. LTA mapping has been driven by the latest ecological knowledge and eCognition software. The completion of these LTA boundaries comes with opportunities to assess their robustness and utility."
  }
]